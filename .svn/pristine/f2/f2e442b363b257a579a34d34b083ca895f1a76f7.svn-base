//
//  JJWGlobal.m
//  JiuJiuWu
//
//  Created by 张竟巍 on 2017/9/12.
//  Copyright © 2017年 张竟巍. All rights reserved.
//

#import "JJWGlobal.h"
#import "OpenUDID.h"
#import "UIViewController+MJPopupViewController.h"
#import "PerfectInfoVC.h"
#import "ManageCardVC.h"


@implementation JJWGlobal
- (instancetype)init
{
    self = [super init];
    if (self) {
        self.uuid = [OpenUDID value];
        self.uuid = STRISEMPTY(self.uuid) ? @"" : self.uuid;
    }
    return self;
}
+(instancetype) sharedMethod
{
    static JJWGlobal *g_global = nil;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        g_global = [[JJWGlobal alloc] init];
    });
    return g_global;
}
@end

@interface JJWLogin (){
    PerfectInfoVC * _activeCodeVC;
}

@end

@implementation JJWLogin
+(instancetype) sharedMethod
{
    static JJWLogin *g_pub = nil;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        g_pub = [[JJWLogin alloc] init];
    });
    return g_pub;
}
- (instancetype)init
{
    self = [super init];
    if (self) {
        _isLogin = NO;
        NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];
        NSDictionary *dic = [userDefaults objectForKey:LOGIN_DATA_KEY];
        if (dic) {
            _loginData = [DloginData yy_modelWithDictionary:dic];
            if(_loginData){
                _isLogin = YES;
            }else{
                [self _setEmptyLoginData];
            }
        }
        
    }
    return self;
}
- (void)saveLoginData:(DloginData *)data{
    if(data){
        NSMutableDictionary *dic = [data yy_modelToJSONObject];
        NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];
        [userDefaults setObject:dic forKey:LOGIN_DATA_KEY];
        [userDefaults synchronize];
        self.loginData = data;
        _isLogin = YES;
    }
}
- (void) _setEmptyLoginData{
    _loginData = [[DloginData alloc]init];
}

- (void)removeLoingData{
    _isLogin = NO;
    NSUserDefaults *userDefaults = [NSUserDefaults standardUserDefaults];
    [userDefaults removeObjectForKey:LOGIN_DATA_KEY];
    [userDefaults synchronize];
    [self _setEmptyLoginData];
}


#pragma mark - 检查资料是否齐全
- (PerfectInfoType)checkInfo {
    //逻辑是先判断是否有企业信息 //在判断是否是个人用户  都不是弹框补充信息
    if (_loginData.merchant_checked.integerValue != 0) {
        if (_loginData.merchant_checked.integerValue == 1) {
            return PerfectCheckingInfoType;
        }else if (_loginData.merchant_checked.integerValue == 2) {
            return PerfectCheckSuccessInfoType;
        }else if (_loginData.merchant_checked.integerValue == 3) {
            return PerfectCheckFailedInfoType;
        }
    }else {
        if (_loginData.realname_checked.integerValue == 0) {
            return PerfectNoCheckInfoType;
        }else if (_loginData.realname_checked.integerValue == 1) {
            return PerfectCheckingInfoType;
        }else if (_loginData.realname_checked.integerValue == 2) {
            return PerfectCheckSuccessInfoType;
        }else if (_loginData.realname_checked.integerValue == 3) {
            return PerfectCheckFailedInfoType;
        }
    }
    return PerfectNoCheckInfoType;
}
- (BOOL)checkInfo:(JJWBaseVC *)viewController complete:(void (^)())block{
    __block __weak typeof(viewController)weakVC = viewController;
    if (STRISEMPTY(_loginData.token)) {
        //吊起登录页面
        [LoginVC OpenLogin:viewController callback:nil];
        return NO;
    }
    [viewController hudShow:viewController.view msg:STTR_ater_on];
    NSDictionary * dict = @{@"token":[JJWLogin sharedMethod].loginData.token};
    [JJWNetworkingTool PostWithUrl:UserStatus params:dict isReadCache:NO success:^(NSURLSessionDataTask *task, id responseObject) {
        [viewController hudclose];
        _loginData.merchant_checked = [responseObject objectForKey:@"merchant_checked"];
        _loginData.realname_checked = [responseObject objectForKey:@"realname_checked"];
//        _loginData.realname_checked = @"2";
        [self saveLoginData:_loginData];
        //资料齐全正常
        if ([self checkInfo] == PerfectCheckSuccessInfoType) {
            DLog(@"资料齐全！");
            if (block) {
                block();
            }
        }else {
        //需要验证
        _activeCodeVC = [[PerfectInfoVC alloc]init];
        _activeCodeVC.cancelBlock = ^{
            [weakVC dismissPopupViewControllerWithanimationType:MJPopupViewAnimationFade];
        };
        _activeCodeVC.activeVlock = ^{
            ManageCardVC * VC = [[ManageCardVC alloc]init];
            VC.type = BindRegisterCardType;
            [weakVC.navigationController pushViewController:VC animated:YES];
            [weakVC dismissPopupViewControllerWithanimationType:MJPopupViewAnimationFade];
        };
        _activeCodeVC.type = [self checkInfo];
        [viewController presentPopupViewController:_activeCodeVC animationType:MJPopupViewAnimationFade];
        }
        
    } failed:^(NSError *error, id chaceResponseObject) {
        [viewController hudclose];
        [JJWBase alertMessage:error.domain cb:nil];
    }];
    return YES;
}

@end


@implementation JJWInitApp
+ (instancetype) sharedMethod
{
    static JJWInitApp *g_global = nil;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        g_global = [[JJWInitApp alloc] init];
    });
    return g_global;
}

- (void)initApp:(void(^)(Version_App *))block {
    if (!_app) {
        [JJWNetworkingTool PostWithUrl:CheckUpdate params:@{@"OS":@"2"} isReadCache:NO success:^(NSURLSessionDataTask *task, id responseObject) {
//            responseObject = @{
//                               @"dl_url" : @"www.jiujiuwu.cn",
//                               @"content" : @"版本更新",
//                               @"version_code" : @"2",
//                               @"os" : @"2",
//                               @"version_id" : @"68",
//                               @"add_time" : @"1529421383",
//                               @"is_force" : @"0",
//                               @"is_open" : @"0",
//                               @"version_name" : @"1.0.3"
//                               };
            _app = [Version_App yy_modelWithDictionary:responseObject];
            if (_app) {
                //审核打开
                _app.is_open = @"1";
            }else {
                _app = [[Version_App alloc]init]; //审核关闭
                _app.is_open = @"0";
            }
            block(_app);
        } failed:^(NSError *error, id chaceResponseObject) {
            _app = [[Version_App alloc]init];
            block(_app);
        }];
    }else {
        block(_app);
    }
    
    
}


@end










